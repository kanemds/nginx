inside nginx.conf ';' is needed

~ performs a case-sensitive match

~* performs a case-insensitive match

!~, or !~* to mean doesn't match


check the nginx folder mime.types
help to recognize extension instead of typing from our own
ex:
  types {
    text/html                             html htm shtml;
    text/css                              css;
    text/xml                              xml;
    image/gif                             gif;
    image/jpeg                            jpeg jpg;
    application/javascript                js;
    application/atom+xml                  atom;
    application/rss+xml                   rss;

    etc.....
  }



http{

  //////////////////////use mime.types instead ////////////////////////////////////////
	types{
    // check network Headers content-type: 
    // type:  extension .css .html .js etc...
		text/css css;
		text/html html;
	}
  //////////////////////////////////////////////////////////////

  include mime.types
  
  server {
    // listen to localhost:8080;
    listen 8080 
    // folder path(file path) that run with localhost 
    root /home/{username}/lighthouse/ownProject/nginx;

    // set specific file to run the static file
    index runThis.html;

    // routes
    location /cars {
        bad example:
          root {path}/car;
       correct: location: value must match with folder 
          root {path};
      }

    // new route with same file
        location /bikes {
        bad example:
          root {path};
       correct: the location must giving the exact path
          alias {path}/cars;
      }

    // try_files if path not exist
    location /toys {
				root {path};
        // try first 
        // try second 
        // finally page 404
				try_files /toys/index.html /runThis.html =404;
		}

    // redirect 307 http code: redirect
    // localhost:8080/bikes 
    // redirect to localhost:8080/books
    	location /bikes {
			return 307 /books;
		}

    // stay at the route and use other content forward to the route
    //  (\w+) one or more words
    // $1 value match by (\w+)
    rewrite ^/number/(\w+) /count/$1;

  }
}


// needs events, empty object is fine
events {}